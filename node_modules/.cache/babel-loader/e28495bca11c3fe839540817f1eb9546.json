{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/react-practice/src/components/Expenses/ExpensesChart.js\";\nimport Chart from \"../Chart/Chart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpensesChart = expenses => {\n  const dataPoints = [{\n    label: \"Jan\",\n    value: 0\n  }, {\n    label: \"Feb\",\n    value: 0\n  }, {\n    label: \"Mar\",\n    value: 0\n  }, {\n    label: \"Apr\",\n    value: 0\n  }, {\n    label: \"May\",\n    value: 0\n  }, {\n    label: \"Jun\",\n    value: 0\n  }, {\n    label: \"Jul\",\n    value: 0\n  }, {\n    label: \"Aug\",\n    value: 0\n  }, {\n    label: \"Sep\",\n    value: 0\n  }, {\n    label: \"Oct\",\n    value: 0\n  }, {\n    label: \"Nov\",\n    value: 0\n  }, {\n    label: \"Dec\",\n    value: 0\n  }];\n  console.log(expenses);\n\n  for (let i = 0; i < expenses.length(); i++) {\n    let month = expenses[i].date.getMonth();\n    dataPoints[month] += expense.amount;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    dataPoints: dataPoints\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 12\n  }, this);\n};\n\n_c = ExpensesChart;\nexport default ExpensesChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpensesChart\");","map":{"version":3,"names":["Chart","ExpensesChart","expenses","dataPoints","label","value","console","log","i","length","month","date","getMonth","expense","amount"],"sources":["/Users/user/Desktop/react-practice/src/components/Expenses/ExpensesChart.js"],"sourcesContent":["import Chart from \"../Chart/Chart\";\n\nconst ExpensesChart = (expenses) => {\n\n    const dataPoints = [\n        { label: \"Jan\", value: 0 },\n        { label: \"Feb\", value: 0 },\n        { label: \"Mar\", value: 0 },\n        { label: \"Apr\", value: 0 },\n        { label: \"May\", value: 0 },\n        { label: \"Jun\", value: 0 },\n        { label: \"Jul\", value: 0 },\n        { label: \"Aug\", value: 0 },\n        { label: \"Sep\", value: 0 },\n        { label: \"Oct\", value: 0 },\n        { label: \"Nov\", value: 0 },\n        { label: \"Dec\", value: 0 }\n    ];\n\n    console.log(expenses)\n\n    for ( let i = 0 ; i < expenses.length() ; i++) {\n        let month = expenses[i].date.getMonth();\n        dataPoints[month] += expense.amount;\n    }\n\n    return <Chart dataPoints={dataPoints}/>;\n}\n\nexport default ExpensesChart;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,gBAAlB;;;AAEA,MAAMC,aAAa,GAAIC,QAAD,IAAc;EAEhC,MAAMC,UAAU,GAAG,CACf;IAAEC,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CADe,EAEf;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CAFe,EAGf;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CAHe,EAIf;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CAJe,EAKf;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CALe,EAMf;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CANe,EAOf;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CAPe,EAQf;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CARe,EASf;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CATe,EAUf;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CAVe,EAWf;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CAXe,EAYf;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CAZe,CAAnB;EAeAC,OAAO,CAACC,GAAR,CAAYL,QAAZ;;EAEA,KAAM,IAAIM,CAAC,GAAG,CAAd,EAAkBA,CAAC,GAAGN,QAAQ,CAACO,MAAT,EAAtB,EAA0CD,CAAC,EAA3C,EAA+C;IAC3C,IAAIE,KAAK,GAAGR,QAAQ,CAACM,CAAD,CAAR,CAAYG,IAAZ,CAAiBC,QAAjB,EAAZ;IACAT,UAAU,CAACO,KAAD,CAAV,IAAqBG,OAAO,CAACC,MAA7B;EACH;;EAED,oBAAO,QAAC,KAAD;IAAO,UAAU,EAAEX;EAAnB;IAAA;IAAA;IAAA;EAAA,QAAP;AACH,CAzBD;;KAAMF,a;AA2BN,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}